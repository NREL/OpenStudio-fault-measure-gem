<measure>
  <schema_version>3.0</schema_version>
  <name>biased_economizer_sensor_return_t</name>
  <uid>f1ba09fb-2903-45b2-838c-604b63fc4662</uid>
  <version_id>c377f604-8fa4-4adc-90e2-0d3f7656c9f3</version_id>
  <version_modified>20200409T145323Z</version_modified>
  <xml_checksum>B7427881</xml_checksum>
  <class_name>BiasedEconomizerSensorReturnT</class_name>
  <display_name>Biased Economizer Sensor: Return Temperature</display_name>
  <description>When sensors drift and are not regularly calibrated, it causes a bias. Sensor readings often drift from their calibration with age, causing equipment control algorithms to produce outputs that deviate from their intended function. This fault is categorized as a fault that occur in the economizer system (sensor) during the operation stage. This fault measure is based on a physical model where certain parameter(s) is changed in EnergyPlus to mimic the faulted operation; thus simulates the biased economizer sensor (return temperature) by modifying Controller:OutdoorAir object in EnergyPlus assigned to the heating and cooling system. The fault intensity (F) is defined as the biased temperature level (K). A positive number means that the sensor is reading a temperature higher than the true temperature.</description>
  <modeler_description>Nine user inputs are required and, based on these user inputs, the return air temperature reading in the economizer will be replaced by the equation below, TraF = Tra + F*AF, where TraF is the biased return air temperature reading, Tra is the actual return air temperature, F is the fault intensity and AF is the adjustment factor. To use this measure, choose the Controller:OutdoorAir object to be faulted. Set the level of temperature sensor bias in K that you want at the return air duct for the economizer during the simulation period. For example, setting 2 means the sensor is reading 28C when the actual temperature is 26C. The time required for the fault to reach the full level is only required when the user wants to model fault evolution. If the fault evolution is not necessary for the user, it can be defined as zero and F will be imposed as a step function with the user defined value. However, by defining the time required for the fault to reach the full level, fault starting month/date/time and fault ending month/date/time, the adjustment factor AF is calculated at each time step starting from the starting month/date/time to gradually impose F based on the user specified time frame. AF is calculated as follows, AF_current = AF_previous + dt/tau where AF_current is the adjustment factor calculated based on the previously calculated adjustment factor (AF_previous), simulation timestep (dt) and the time required for the fault to reach the full level (tau).</modeler_description>
  <arguments>
    <argument>
      <name>econ_choice</name>
      <display_name>Choice of economizers.</display_name>
      <type>Choice</type>
      <required>true</required>
      <model_dependent>false</model_dependent>
    </argument>
    <argument>
      <name>ret_t_bias</name>
      <display_name>Enter the bias level of the return air temperature sensor. A positive number means that the sensor is reading a temperature higher than the true temperature. [K]</display_name>
      <type>Double</type>
      <required>false</required>
      <model_dependent>false</model_dependent>
      <default_value>-2</default_value>
    </argument>
    <argument>
      <name>time_constant</name>
      <display_name>Enter the time required for fault to reach full level [hr]</display_name>
      <type>Double</type>
      <required>false</required>
      <model_dependent>false</model_dependent>
      <default_value>0</default_value>
    </argument>
    <argument>
      <name>start_month</name>
      <display_name>Enter the month (1-12) when the fault starts to occur</display_name>
      <type>Double</type>
      <required>false</required>
      <model_dependent>false</model_dependent>
      <default_value>1</default_value>
    </argument>
    <argument>
      <name>start_date</name>
      <display_name>Enter the date (1-28/30/31) when the fault starts to occur</display_name>
      <type>Double</type>
      <required>false</required>
      <model_dependent>false</model_dependent>
      <default_value>1</default_value>
    </argument>
    <argument>
      <name>start_time</name>
      <display_name>Enter the time of day (0-24) when the fault starts to occur</display_name>
      <type>Double</type>
      <required>false</required>
      <model_dependent>false</model_dependent>
      <default_value>0</default_value>
    </argument>
    <argument>
      <name>end_month</name>
      <display_name>Enter the month (1-12) when the fault ends</display_name>
      <type>Double</type>
      <required>false</required>
      <model_dependent>false</model_dependent>
      <default_value>12</default_value>
    </argument>
    <argument>
      <name>end_date</name>
      <display_name>Enter the date (1-28/30/31) when the fault ends</display_name>
      <type>Double</type>
      <required>false</required>
      <model_dependent>false</model_dependent>
      <default_value>31</default_value>
    </argument>
    <argument>
      <name>end_time</name>
      <display_name>Enter the time of day (0-24) when the fault ends</display_name>
      <type>Double</type>
      <required>false</required>
      <model_dependent>false</model_dependent>
      <default_value>23</default_value>
    </argument>
  </arguments>
  <outputs/>
  <provenances/>
  <tags>
    <tag>HVAC.HVAC Controls</tag>
  </tags>
  <attributes>
    <attribute>
      <name>Measure Type</name>
      <value>EnergyPlusMeasure</value>
      <datatype>string</datatype>
    </attribute>
    <attribute>
      <name>Intended Software Tool</name>
      <value>OpenStudio Application</value>
      <datatype>string</datatype>
    </attribute>
    <attribute>
      <name>Intended Software Tool</name>
      <value>Parametric Analysis Tool</value>
      <datatype>string</datatype>
    </attribute>
    <attribute>
      <name>Intended Software Tool</name>
      <value>Analysis Spreadsheet</value>
      <datatype>string</datatype>
    </attribute>
  </attributes>
  <files>
    <file>
      <filename>misc_eplus_func.rb</filename>
      <filetype>rb</filetype>
      <usage_type>resource</usage_type>
      <checksum>435C6B82</checksum>
    </file>
    <file>
      <filename>ControllerOutdoorAirFlow_T.rb</filename>
      <filetype>rb</filetype>
      <usage_type>resource</usage_type>
      <checksum>C2A71A53</checksum>
    </file>
    <file>
      <version>
        <software_program>OpenStudio</software_program>
        <identifier>1.5.0</identifier>
        <min_compatible>1.5.0</min_compatible>
      </version>
      <filename>measure.rb</filename>
      <filetype>rb</filetype>
      <usage_type>script</usage_type>
      <checksum>DD1B92C1</checksum>
    </file>
    <file>
      <filename>README.md</filename>
      <filetype>md</filetype>
      <usage_type>readme</usage_type>
      <checksum>D0B0AB38</checksum>
    </file>
  </files>
</measure>
